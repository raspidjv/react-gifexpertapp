{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","setTimeout","useFetchGifs","g","GifExpertApp","categorias","cat","ReactDOM","render","document","getElementById"],"mappings":"2MAIaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAoBA,OAAS,uBAAMC,SAXM,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OAEtCN,EAAc,MAKb,UACL,gDACA,uBAAOO,KAAO,OACbC,MAAUT,EACVU,SAtBoB,SAACP,GAEtBF,EAAcE,EAAEQ,OAAOF,c,+BCRlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACoCC,UAAUH,GAD9C,+DAIAI,MAAMF,GAJN,cAIbG,EAJa,gBAOIA,EAAKC,OAPT,uBAOXC,EAPW,EAOXA,KAGFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAdvB,kBAoBZM,GApBY,4CAAH,sDCAPO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEpC,OACI,sBAAKc,UAAU,0CAAf,UAEI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCHHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAErB,ECHwB,SAACA,GACzB,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAmBA,OAdCC,qBAAW,WACRxB,EAASC,GACRwB,MAAM,SAAAC,GACHC,YAAY,WACRJ,EAAS,CACLf,KAAMkB,EACNL,SAAS,MAEnB,UAEH,CAAEpB,IAIEqB,EDjBwBM,CAAa3B,GAAhCa,EAAZ,EAAON,KAAaa,EAApB,EAAoBA,QAapB,OACA,qCACI,oBAAIJ,UAAU,oCAAd,SAAmDhB,IACjDoB,GAAW,mBAAGJ,UAAU,mCAAb,4BAEb,qBAAKA,UAAU,YAAf,SAGYH,EAAOJ,KAAK,SAAAmB,GAER,OAAS,cAAC,EAAD,eAEDA,GADCA,EAAEjB,aEWpBkB,EAtCM,WAEjB,MAAoC3C,mBAAS,CAAE,gBAA/C,mBAAO4C,EAAP,KAAmB7C,EAAnB,KASA,OACI,qCACI,8CACA,cAAC,EAAD,CACIA,cAAeA,IACnB,uBAIA,6BAEQ6C,EAAWrB,KAAK,SAAAsB,GAEZ,OAAQ,cAAC,EAAD,CAAmB/B,SAAU+B,GAAfA,YCtB9CC,IAASC,OACP,cAAI,EAAJ,IACEC,SAASC,eAAe,W","file":"static/js/main.bc475172.chunk.js","sourcesContent":["import { useState } from 'react';\nimport propTypes from 'prop-types';\n\n// export const AddCategory = ( props ) => {\nexport const AddCategory = ({ setCategorias }) => {\n\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputValue = (e) => {\n        // console.log(e.target.value);\n        setInputValue(e.target.value);\n        // props.setCategorias(cats => [...cats, inputValue ]);\n        // setCategorias(cats => [...cats, inputValue ]);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        // console.log('Submittd!');\n        if (inputValue.trim().length > 2) {\n            setCategorias(cats => [inputValue, ...cats]);\n            // setCategorias(cats => [...cats, inputValue ]);\n            setInputValue('');\n        }\n    }\n\n\n    return ( <form onSubmit = { handleSubmit } >\n        <h3> Add Category </h3> \n        <input type = \"text\"\n         value = { inputValue }\n         onChange = { handleInputValue }\n        />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategorias: propTypes.func.isRequired\n}","\n\nexport const getGifs = async( category ) => {\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=ZXGpaSWnVAlEWYnjzAd4zvfJOT63KmWL`;\n    // console.log(url);\n\n    const resp = await fetch(url);\n    // console.log(resp);\n\n    const { data } = await resp.json();\n    // console.log(data);\n\n    const gifs = data.map( img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    });\n\n    // console.log(gifs);\n    // setImages(gifs);\n    return gifs;\n}\n","import React from 'react'\n\nexport const GifGridItem = ({id, title, url}) => {\n    // console.log({id, title, url})\n    return (\n        <div className=\"card animate__animated animate__fadeIn \">\n            {/* <img src={url} alt={title} width=\"100\" height=\"100\"/> */}\n            <img src={url} alt={title} />\n            <p>{title}</p>\n        </div>\n    )\n}\n","// import React, { useState, useEffect } from 'react'\n// import { getGifs } from '../helpers/getGifs';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({category}) => {\n\n    const {data:images, loading} = useFetchGifs(category);\n    // console.log(data, loading);\n\n    // const [ images, setImages ] = useState([]);\n\n    // useEffect( () => {\n    //     getGifs( category)  \n    //     .then( imgs => setImages(imgs))\n    // }, [ category ]);\n\n   \n    // getGifs();\n\n    return ( \n    <>\n        <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n        { loading && <p className=\"animate__animated animate__flash\">'Cargando...' </p> }\n\n        <div className=\"card-grid\">\n          \n                {\n                    images.map( g => {\n                        // return (<li key={g.id}><a href={g.url}> {g.title} </a></li> )\n                        return ( <GifGridItem \n                            key={g.id} \n                            {...g}\n                        />)\n                    })\n        \n                }\n        </div>\n        </>\n    )\n}\n","import { useState, useEffect } from 'react';\n// import { GifGridItem } from './GifGridItem';\nimport { getGifs } from '../helpers/getGifs';\n\nexport const useFetchGifs = (category) => {\n    const [state, setstate] = useState({\n        data: [],\n        loading: true\n    });\n\n     useEffect( () => {\n        getGifs( category)  \n        .then( imgs => {\n            setTimeout( () => {\n                setstate({\n                    data: imgs,\n                    loading: false\n            });\n        },1000)\n        })\n    }, [ category ]);\n\n\n\n    return state; // data: [], loading: true\n}","import { useState } from 'react';\nimport {AddCategory } from './components/AddCategory.js'\nimport { GifGrid } from './components/GifGrid.js';\n\nconst GifExpertApp = () => {\n    // const [categorias, setCategorias] = useState([ 'Categoria 1', 'categoria 2', 'categoria 3']);\n    const [categorias, setCategorias] = useState([ 'no category']);\n\n    // const handleAdd = () => {\n    //     // setCategorias( [...categorias, 'categoria ' + (categorias.length +1) ]);\n    //     setCategorias( cats => [...cats, 'categoria ' + (cats.length +1)]);\n    //     // console.log(categorias.length );\n    // };\n    \n    \n    return( \n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory \n                setCategorias={setCategorias} />\n            <hr />\n            \n            {/* <button onClick={ handleAdd }>Agregar</button> */}\n\n            <ol>\n                {\n                    categorias.map( cat => {\n                        // return <li key={cat}> {cat} </li>\n                        return (<GifGrid key={cat} category={cat}\n                        />)\n                    })\n                    // categorias.map( cat => {\n                    //     return <GifGrid \n                    //                 key= { cat }\n                    //                 category={ cat } />\n                    // })\n                }\n            </ol>\n        </>\n    );\n}\n\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\n\nReactDOM.render( \n  <   GifExpertApp / > ,\n    document.getElementById('root')\n);"],"sourceRoot":""}